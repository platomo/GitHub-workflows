name: Reusable workflow to create and publish pypi release


on:
  workflow_call:
    inputs:
      release-url:
        required: true
        type: string
      os:
        required: true
        type: string
      py-version:
        required: true
        type: string
      package-version:
        required: true
        type: string
      package-path:
        required: true
        type: string
      repository-name:
        required: false
        default: testpypi
        type: string
      repository-url:
        required: false
        default: https://test.pypi.org/legacy/
        type: string
    secrets:
      PLATOMO_BUILDER_ACCESS:
        required: true

jobs:
  build-n-publish:
    name: Build and upload release to TestPyPI
    runs-on: ${{ inputs.os }}
    environment:
      name: ${{inputs.repository-name}}
      url: ${{inputs.release_url}}
    permissions:
      actions: read
      contents: read
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ inputs.py-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.py-version }}

      - name: Update version.py
        run: |
          if [ "${{ inputs.package-version }}" == 'nightly' ]; then
            dt=$(date '+%Y%m%d %H%M%S')
            sed -i "s/__version__ = \".*\"/__version__ = \"${dt}\"/" "${{ inputs.package-path }}/version.py"
          else
            sed -i "s/__version__ = \".*\"/__version__ = \"${{ inputs.package-version }}\"/" "${{ inputs.package-path }}/version.py"
          fi
      - name: Install pypa/build
        run: >-
          python -m
          pip install
          build
          --user
      - name: Build a binary wheel and a source tarball
        run: >-
          python -m
          build
          --sdist
          --wheel
          --outdir dist/
          .
      - name: Publish package distributions to TestPyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: ${{ inputs.repository-url }}
          verbose: true
